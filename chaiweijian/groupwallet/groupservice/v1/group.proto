// Copyright 2021 Chai Wei Jian
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package chaiweijian.groupwallet.groupservice.v1;

option java_multiple_files = true;
option java_package = "com.chaiweijian.groupwallet.groupservice.v1";
option java_outer_classname = "GroupProto";

import "google/api/resource.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

// A representation of group in GroupWallet.
message Group {
  option (google.api.resource) = {
    type: "groupwallet.chaiweijian.com/Group"
    pattern: "groups/{group}"
  };

  // The resource name of the group.
  // Format is `groups/{group}`
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The display name of group. Format is 4 - 120 unicode characters.
  // Leading and trailing whitespace will be trimmed.
  string display_name = 2 [(google.api.field_behavior) = REQUIRED];

  // The resource name for the group's owner.
  string owner = 3 [(google.api.resource_reference) = {
    type: "groupwallet.chaiweijian.com/User"
  }];

  // Represent a member in the group
  message Member {
    // The resource name for the member.
    string user = 1 [(google.api.resource_reference) = {
      type: "groupwallet.chaiweijian.com/User"
    }];

    // The relation between group and member.
    enum State {
      // Default value. This value is unused.
      STATE_UNSPECIFIED = 0;

      // Invitation has sent to this member and haven't get accepted.
      PENDING = 1;

      // User accepted the invitation.
      ACCEPTED = 2;

      // User rejected the invitation.
      REJECTED = 3;

      // User has left the group.
      LEFT = 4;

      // User has been removed by owner.
      REMOVED = 5;
    }

    // The current state.
    State state = 2;
  }

  // The list of members in the group.
  // The owner is not included in this list.
  repeated Member members = 4;

  // Represent the status of this group
  enum State {
    // Default value. This value is unused.
    STATE_UNSPECIFIED = 0;

    // This group is active.
    ACTIVE = 1;

    // This group is soft deleted.
    DELETED = 2;
  }

  // The base currency of this group.
  string currency_code = 5 [(google.api.field_behavior) = REQUIRED];

  // The time when this group is created.
  google.protobuf.Timestamp create_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when this group was soft deleted.
  google.protobuf.Timestamp delete_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The estimation time when this group will be purged by the system.
  // The system does not guarantee this resource will be purge immediately
  // on the expire_time. It could happen after any arbitrary duration of
  // the expire_time.
  google.protobuf.Timestamp expire_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The aggregate version of this group. The system guarantee to increment
  // this value whenever this group change.
  int32 aggregate_version = 14 [(google.api.field_behavior) = OUTPUT_ONLY];

  // This checksum is computed by the server based on the value of aggregate_version,
  // update and delete request must include this field to ensure the
  // client has an up-to-date value before proceeding.
  string etag = 15;
}